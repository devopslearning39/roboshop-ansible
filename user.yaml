- name: user server
  hosts: user
  become: yes
  tasks:
  - name: disabling old nodejs and enabling node18 version
    ansible.builtin.shell: dnf module disable nodejs -y ; dnf module enable nodejs:18 -y

  - name: installing nodejs
    ansible.builtin.dnf:
      name: nodejs
      state: present

  - name: roboshop user adding
    ansible.builtin.user:
      name: roboshop

  - name: removing app directory
    ansible.builtin.file:
      path: /app
      state: absent

  - name: creating app directory
    ansible.builtin.file:
      name: /app
      state: directory

  - name: download the application code
    ansible.builtin.get_url:
      url: https://roboshop-builds.s3.amazonaws.com/user.zip
      dest: /tmp
  
  - name: extracting the code
    ansible.builtin.unarchive:
      src: /tmp/user.zip
      dest: /app
      remote_src: yes

  - name: installing npm
    ansible.builtin.command: npm install
      args:
        chdir /app

  - name: copying user service
    ansible.builtin.copy:
      src: user.service
      dest: /etc/systemd/system/user.service

  - name: daemon reload
    ansible.builtin.systemd_service:
      daemon_reload: true

  - name: copying mongodb.repo
    ansible.builtin.copy:
      src: mongodb.repo
      dest: /etc/yum.repos.d/mongodb.repo
      remote_src: yes

  - name: installing mongodb-org-shell
    ansible.builtin.package:
      name: mongodb-org-shell
      state: present


  - name: get the users count
    ansible.builtin.command:  mongo --host mongodb.daws76s.online --quiet --eval 'db = db.getSiblingDB("users"); db.users.count()'
    register: user_count

  - name: Loading schema
    ansible.builtin.command: mongo --host mongodb.jella.fun < /app/schema/user.js
    when: user_count.stdout == "0"


  - name: enable and start user
    ansible.builtin.service:
      name: user
      enabled: yes
      state: started
